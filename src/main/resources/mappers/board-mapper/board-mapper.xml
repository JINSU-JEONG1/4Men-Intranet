<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="boardMapper">
	<resultMap type="kh.study.intranet.board.vo.BoardVO" id="board">
		<id column="BOARD_NUM"     			property="boardNum"/>
		<result column="USER_ID"     		property="userId"/>
		<result column="BOARD_TITLE"        property="boardTitle"/>
		<result column="BOARD_CONTENT"      property="boardContent"/>
		<result column="IS_SECRET"     		property="isSecret"/>
		<result column="SECRET_PW"     		property="secretPw"/>
		<result column="BOARD_READ_CNT"     property="boardReadCnt"/>
		<result column="BOARD_REG_DATE"     property="boardRegDate"/>
		<result column="REPLY_COUNT"     	property="replyCount"/>
		<result column="LIKE_COUNT"     	property="likeCount"/>
		<result column="BOARD_CATE_NAME" 	property="boardCateName"/>
	</resultMap>

	<resultMap type="kh.study.intranet.board.vo.BoardCategoryVO" id="boardCategory">
		<id column="BOARD_CATE_CODE"     property="boardCateCode"/>
		<result column="BOARD_CATE_NAME"     property="boardCateName"/>
	</resultMap>
	
	<!-- 최신 공지사항 상단 3개 -->
	<select id="selectNoticeBoardList" resultMap="board">
		SELECT BOARD_NUM
       		   , BOARD_TITLE
		       , USER_ID
		       , BOARD_REG_DATE
		       , REPLY_COUNT
		       , BOARD_READ_CNT
		       , LIKE_COUNT
		       , BOARD_CATE_CODE
               , BOARD_CATE_NAME 
		FROM (SELECT BOARD_NUM
			       , BOARD_TITLE
			       , USER_ID
			       , BOARD_REG_DATE
			       , REPLY_COUNT
			       , BOARD_READ_CNT
			       , LIKE_COUNT
			       , BOARD_CATE_CODE
                   , BOARD_CATE_NAME
       			   , RANK() OVER(ORDER BY BOARD_REG_DATE DESC) AS RANK
      		  FROM (SELECT DISTINCT BO.BOARD_NUM
                            		, BOARD_TITLE
                            		, BO.USER_ID
		                            , TO_CHAR(BOARD_REG_DATE, 'YYYY-MM-DD HH24') AS BOARD_REG_DATE
		                            , (SELECT COUNT(REPLY_NUM)
		                                FROM BOARD_REPLY
		                                WHERE BOARD_NUM = BO.BOARD_NUM 
		                                ) AS REPLY_COUNT
		                            , BOARD_READ_CNT
		                            , (SELECT COUNT(LIKE_NUM)
		                                FROM BOARD_LIKE
		                                WHERE BOARD_NUM = BO.BOARD_NUM
		                                ) AS LIKE_COUNT
	                                , CATE.BOARD_CATE_CODE
                            		, CATE.BOARD_CATE_NAME
           			FROM BOARD BO LEFT JOIN BOARD_REPLY RE
           			ON BO.BOARD_NUM = RE.BOARD_NUM
           			LEFT JOIN BOARD_CATEGORY CATE
                    ON BO.BOARD_CATE_CODE = CATE.BOARD_CATE_CODE
                    WHERE BO.BOARD_CATE_CODE = 5			  
           			ORDER BY BOARD_REG_DATE DESC
           					)
           				)
			WHERE RANK &lt;= 3
	</select>
	
	<!-- 게시판 추천글 상단 정렬 -->
	<select id="selectLikeBoardList" resultMap="board">
		SELECT BOARD_NUM
       		   , BOARD_TITLE
		       , USER_ID
		       , BOARD_REG_DATE
		       , REPLY_COUNT
		       , BOARD_READ_CNT
		       , LIKE_COUNT
		       , BOARD_CATE_CODE
               , BOARD_CATE_NAME 
		FROM (SELECT BOARD_NUM
			       , BOARD_TITLE
			       , USER_ID
			       , BOARD_REG_DATE
			       , REPLY_COUNT
			       , BOARD_READ_CNT
			       , LIKE_COUNT
			       , BOARD_CATE_CODE
                   , BOARD_CATE_NAME
       			   , RANK() OVER(ORDER BY LIKE_COUNT DESC, BOARD_REG_DATE DESC, BOARD_READ_CNT DESC) AS RANK
      		  FROM (SELECT DISTINCT BO.BOARD_NUM
                            		, BOARD_TITLE
                            		, BO.USER_ID
		                            , TO_CHAR(BOARD_REG_DATE, 'YYYY-MM-DD HH24') AS BOARD_REG_DATE
		                            , (SELECT COUNT(REPLY_NUM)
		                                FROM BOARD_REPLY
		                                WHERE BOARD_NUM = BO.BOARD_NUM 
		                                ) AS REPLY_COUNT
		                            , BOARD_READ_CNT
		                            , (SELECT COUNT(LIKE_NUM)
		                                FROM BOARD_LIKE
		                                WHERE BOARD_NUM = BO.BOARD_NUM
		                                ) AS LIKE_COUNT
	                                , CATE.BOARD_CATE_CODE
                            		, CATE.BOARD_CATE_NAME
           			FROM BOARD BO LEFT JOIN BOARD_REPLY RE
           			ON BO.BOARD_NUM = RE.BOARD_NUM
           			LEFT JOIN BOARD_CATEGORY CATE
                    ON BO.BOARD_CATE_CODE = CATE.BOARD_CATE_CODE	
                    WHERE BO.BOARD_CATE_CODE != 5		  
           			ORDER BY LIKE_COUNT DESC, BOARD_REG_DATE DESC, BOARD_READ_CNT DESC
           					)
           				)
			WHERE RANK &lt;= 3
	</select>
	
	
	<!--게시글 검색 및 조회  -->
	<select id="selectBoardListAndSearch" resultMap="board">
	
		SELECT RN
				, BOARD_NUM
				, BOARD_TITLE
				, USER_ID
				, BOARD_REG_DATE
				, REPLY_COUNT
				, BOARD_READ_CNT
                , LIKE_COUNT
                , BOARD_CATE_CODE
                , BOARD_CATE_NAME
                , IS_SECRET
			FROM (
					SELECT ROWNUM AS RN
					, BOARD_NUM
					, BOARD_TITLE
					, USER_ID
					, BOARD_REG_DATE
					, REPLY_COUNT
					, BOARD_READ_CNT
	                , LIKE_COUNT
	                , BOARD_CATE_CODE
                    , BOARD_CATE_NAME
                    , IS_SECRET
				FROM (
						    SELECT  DISTINCT BO.BOARD_NUM 
							, BOARD_TITLE 
							, BO.USER_ID 
							, TO_CHAR(BOARD_REG_DATE, 'YYYY-MM-DD HH24') AS BOARD_REG_DATE
							, (SELECT COUNT(REPLY_NUM)
		                       FROM BOARD_REPLY
		                       WHERE BOARD_NUM = BO.BOARD_NUM) AS REPLY_COUNT
							, BOARD_READ_CNT
			                , (SELECT COUNT(LIKE_NUM)
		                       FROM BOARD_LIKE
		                       WHERE BOARD_NUM = BO.BOARD_NUM) AS LIKE_COUNT
	                        , CATE.BOARD_CATE_CODE
                            , CATE.BOARD_CATE_NAME
                            , IS_SECRET
					FROM BOARD BO LEFT JOIN BOARD_REPLY RE
					ON BO.BOARD_NUM = RE.BOARD_NUM
					LEFT JOIN BOARD_CATEGORY CATE
                    ON BO.BOARD_CATE_CODE = CATE.BOARD_CATE_CODE 
			        WHERE 1 = 1
					<if test= "userId != null and !userId.equals('')">
					AND UPPER(BO.USER_ID) LIKE UPPER('%'||#{userId}||'%')
					</if>
					<if test= "boardTitle != null and !boardTitle.equals('')">
					AND UPPER(BO.BOARD_TITLE) LIKE UPPER('%'||#{boardTitle}||'%')
					</if>
					<if test= "boardCateCode != null and !boardCateCode.equals('')">
					AND BO.BOARD_CATE_CODE = #{boardCateCode}
					</if> 
			        <!-- <if test="boardContent != null and !boardContent.equals('')">
					AND UPPER(BOARD_CONTENT) LIKE UPPER('%'||#{boardContent}||'%')
					</if> -->		
					<if test="fromDate != null and !fromDate.equals('')">
					AND TO_CHAR(BOARD_REG_DATE, 'YYYY-MM-DD') &gt;= #{fromDate}  
					</if>		
					<if test="toDate != null and !toDate.equals('')">
					AND TO_CHAR(BOARD_REG_DATE, 'YYYY-MM-DD') &lt;= #{toDate}
					</if>	
				ORDER BY BOARD_NUM DESC	
				<!-- ORDER BY BOARD_READ_CNT
				ORDER BY LIKE_COUNT
				ORDER BY #{readWay} DESC
				ORDER BY ${readWay} DESC	
				ORDER BY "LIKE_COUNT" DESC -->
		        )
	        )
	        <if test ="startNum !=null and endNum != null">
	        WHERE RN &gt;= #{startNum} AND RN &lt;= #{endNum}
	        </if>
	
	</select>
	
	<!-- 게시판카테고리조회 -->
 	<select id="selectBoardCate" resultMap="boardCategory">
		
		SELECT BOARD_CATE_CODE
				, BOARD_CATE_NAME
		FROM BOARD_CATEGORY  
		ORDER BY BOARD_CATE_CODE DESC
	</select>
	
	
	
	
	

	<!-- 게시글 상세조회 -->
	<select id="selectBoardDetail" resultMap="board">
		SELECT BOARD_NUM
				, BOARD_TITLE 
				, BOARD_CONTENT
				, USER_ID
				, BOARD_READ_CNT
				, TO_CHAR(BOARD_REG_DATE, 'YYYY-MM-DD') AS BOARD_REG_DATE
		FROM BOARD
		WHERE BOARD_NUM = #{boardNum}
	</select>
	
	<!-- 게시글 등록 -->
	<insert id="insertBoard">
		INSERT INTO BOARD (
			BOARD_NUM
			, USER_ID
			, BOARD_TITLE
			, BOARD_CONTENT
			, BOARD_CATE_CODE
			, IS_SECRET
			<!-- , SECRET_PW -->

		) VALUES (
			(SELECT NVL(MAX(BOARD_NUM),0)+1 FROM BOARD)
			, #{userId}
			, #{boardTitle}
			, #{boardContent}
			, #{boardCateCode}
			, #{isSecret}
		    <!-- , #{secretPw} -->
		)
	</insert>
	
	<!-- 게시글 수정 -->
	<update id="updateBoard">
	UPDATE BOARD
	SET	BOARD_TITLE = #{boardTitle}
		, BOARD_CONTENT = #{boardContent}
	WHERE BOARD_NUM = #{boardNum}
	</update>
	
	<!--게시글 삭제  -->
	<delete id="deleteBoard">
	DELETE FROM BOARD WHERE BOARD_NUM = #{boardNum}
	</delete>
	
	
	<!-- 게시글 조회수증가 -->
	<update id="updateReadCnt">
		UPDATE BOARD
		SET BOARD_READ_CNT = BOARD_READ_CNT + 1 
		WHERE BOARD_NUM = #{boardNum}
	</update>
	
	<!-- 게시글 총 개수 조회 -->
	<select id="selectBoardCnt" resultType="int">
		SELECT COUNT(BOARD_NUM)
		FROM BOARD
	</select>
	
	
	
	
	
	
	
	
	
</mapper>

